version: '3.8'

services:
  # PostgreSQL 데이터베이스
  postgres:
    image: pgvector/pgvector:pg15
    container_name: scene_graph_postgres
    environment:
      POSTGRES_DB: scene_graph_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - scene_graph_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # FastAPI 서버
  api_server:
    build: ./server
    container_name: scene_graph_api_server
    environment:
      - DB_HOST=postgres
      - DB_NAME=scene_graph_db
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_PORT=5432
      - API_HOST=0.0.0.0
      - API_PORT=8000
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - scene_graph_network
    volumes:
      - ./server:/app
    command: ["python", "start_server.py"]
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # PostgREST - 자동 REST API 생성 (선택사항)
  postgrest:
    image: postgrest/postgrest
    container_name: scene_graph_postgrest
    environment:
      PGRST_DB_URI: postgres://postgres:password@postgres:5432/scene_graph_db
      PGRST_DB_SCHEMA: public
      PGRST_DB_ANON_ROLE: postgres
      PGRST_DB_USE_LEGACY_GUCS: "false"
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - scene_graph_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # 클라이언트 테스트 컨테이너
  client_test:
    build: ./client
    container_name: scene_graph_client_test
    working_dir: /app
    environment:
      - API_URL=http://api_server:8000
      - DB_HOST=postgres
      - DB_NAME=scene_graph_db
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_PORT=5432
      - DOCKER_CONTAINER=true
    depends_on:
      - postgres
      - api_server
    networks:
      - scene_graph_network
    volumes:
      - ./client:/app
      - ./server:/app/server
      - ./test:/app/test
    # 클라이언트는 수동으로 실행 (테스트용)
    command: ["tail", "-f", "/dev/null"]
    # 로그 크기 제한
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

volumes:
  postgres_data:

networks:
  scene_graph_network:
    driver: bridge
